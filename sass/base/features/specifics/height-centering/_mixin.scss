/**
 * Center horizontally text
 *
 * @mixin
 * @section CSS Positioning
 * @example 
 *  @include center-horizontally-text()
*/

@mixin center-horizontally-text() {
	text-align: center;
}

/**
 * Basic horizontal centering of an HTML element
 *
 * @mixin
 * @section CSS Positioning
 * @example 
 *  @include center-horizontally()
*/

@mixin center-horizontally() {
	margin: 0 auto;
}


/**
 * Basic horizontal centering of multiple HTML elements in a row
 *
 * @mixin
 * @section CSS Positioning
 * @example 
 *  @include center-horizontally-multiple-rows-block()
*/

@mixin center-horizontally-multiple-rows-block() {
	display: inline-block;
}

/**
 * Center vertically of an element or component, but knowing it's height.
 *
 * @mixin
 * @section CSS Positioning
 * @param $height pixel or percentage based height.
 * @example 
 *  @include center-vertically-known-height-block(300px)
*/

@mixin center-vertically-known-height-block($height) {
	position: relative;

	> div {
		height: $height;
		margin-top: -($height/2);
		position: absolute;
		top: 50%;
	}
}

/**
 * Center vertically of of a component without knowing it's height.
 *
 * @mixin
 * @section CSS Positioning
 * @example 
 *  @include center-vertically-unknown-height-block() 
*/

@mixin center-vertically-unknown-height-block() {
	position: relative;

	> div {
		position: absolute;
		top: 50%;
		transform: translateY(-50%);
	}
}

/**
 * Center both vertically and horizontally of of a component with knowing it's height
 *
 * @mixin
 * @section CSS Positioning
 * @param $width
 * @param $height
 * @example 
 *  @include center-vertically-unknown-height-block() 
*/
@mixin center-horizontally-vertically-known-height-grid($height, $width) {
	position: relative;

	> div {
		height: $height;
		left: 50%;
		margin-left: -($width/2);
		margin-top: -($height/2);
		position: absolute;
		top: 50%;
		width: $width;
	}
}


/**
 * Center both vertically and horizontally of of a component without knowing it's height
 *
 * @mixin
 * @section CSS Positioning
 * @example 
 *  @include center-vertically-unknown-height-block() 
*/

@mixin center-horizontally-vertically-unknown-height() {
	position: relative;

	> div {
		left: 50%;
		position: absolute;
		top: 50%;
		transform: translate(-50%, -50%);
	}
}

/**
 * Center vertically of of a component without knowing it's height (using flexbox).
 *
 * @mixin
 * @section CSS Positioning
 * @example 
 *  @include center-vertically-unknown-height-block() 
*/

@mixin center-vertically-unknown-height-flex() {
	@include flexbox();
	@include flex-justify-content(center);
	@include flex-direction(column);
}

/**
 * Center both vertically and horizontally of of a component without knowing it's height (using grid).
 *
 * @mixin
 * @section CSS Positioning
 * @example 
 *  @include center-vertically-unknown-height-block() 
*/

@mixin center-horizontally-vertically-unknown-height-grid() {
	display: grid;

	> div {
		margin: auto;
	}
}