@mixin bouncing-loader() {
	////@include flexbox();
	////@include flex-justify-content(center);

	> div {
		animation: bouncing-loader 0.6s infinite alternate;
		background: #888;
		border-radius: 50%;
		height: 1rem;
		margin: 3rem 0.2rem;
		width: 1rem;

		&:nth-of-type(2) {
			animation-delay: 0.2s;
		}

		&:nth-of-type(3) {
			animation-delay: 0.4s;
		}
	}

	@keyframes bouncing-loader { //todo - add to animations
		from {
			opacity: 1;
			transform: translateY(0);
		}

		to {
			opacity: 0.1;
			transform: translateY(-1rem);
		}
	}
}

// Variables - todo move ? improve
$circleDiam: 20px;
$innerCircleDiam: $circleDiam/3;
$rotatingCircleDiam: $circleDiam/5;

$innerCirclePos: ($circleDiam - $innerCircleDiam)/2;
$rotatingCirclePosLeft: ($circleDiam - $innerCircleDiam)/2 - $rotatingCircleDiam;
$rotatingCirclePosTop: $circleDiam/2 - $rotatingCircleDiam/2;

/**
 * needs documentation
 * @structure Spinner
 * @section Loaders
 * @markup
 *  <div class="acc-spinner">
 *  </div>
*/

@mixin spinner() {
	background-color: #888;
	border-radius: 50%;
	box-shadow: 0 2px 1px rgba(0,0,0,.3) inset;
	height: $circleDiam;
  	left: 50%;
	//margin: -$circleDiam/2;
	position: relative;
	user-select: none;
	color: transparent;
	//top: 50%;
	width: $circleDiam;

	&:after {
		animation: spin 1s linear infinite;
		background-color: $color-white;
		border-radius: 50%;
		content: '';
		height: $rotatingCircleDiam;
		left: $rotatingCirclePosLeft;
		position: absolute;
		top: $rotatingCirclePosTop;
		transform-origin: $innerCirclePos/2 + $rotatingCircleDiam;
		width: $rotatingCircleDiam;
	}

	@keyframes spin {
		100% { transform: rotate(360deg); }
	}
}
