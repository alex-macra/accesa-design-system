// Grid layout

$column: 12;

@mixin grid-container {
  @include flexbox;
  flex-flow: row wrap;
  width: 100%;

  & > * {
    flex: 1 0 100%; //todo
  }
}

@function grid($size) {

  $grid-base: $column;
  $divide: null;
  $total: null;

  @if length($size) == 1 and type_of($size) != number {
    
    @if $size == full or $size == block {
      $divide: 1;
      $total: 1;
    }
      
    @else if $size == half {
      $divide: 1;
      $total: 2;
    }
      
    @else if $size == third {
      $divide: 1;
      $total: 3;
    }
      
    @else if $size == quarter {
      $divide: 1;
      $total: 4;
    }
      
    @else if $size == fifth {
      $divide: 1;
      $total: 5;
    }
  }
    
  @else {
    
    @if length($size) > 1 {
      $divide: nth($size, 1);
      $total: nth($size, length($size));
    }
      
    @else {
      $divide: $size;
      $total: $grid-base;
    }
  }

  @if type_of($divide) == number and type_of($total) == number {
    @return percentage($divide/$total);
  }

  @else {
    @return null;
  }
}

@mixin grid($size) {
  
  @if $size == container or $size == wrapper {
    @include grid-container;
  }
    
  @else {
    $percentage: grid($size);

    @if $percentage != null {
      max-width: $percentage;
    }
  }
}

// GRID OFFSET (mixin)
@mixin grid-gutter($side, $size) {
  $percentage: grid($size);

  @if $percentage != null and ($side == right or $side == left) {
    margin-#{$side}: $percentage;
  }
}

//test

.example { @include grid(container); }

.example > div {
  &:nth-child(1) {
    @include grid(2);
  }
  &:nth-child(2) {
    @include grid(10 of 12);
  }
  &:nth-child(n+4):nth-child(-n+7) {
    @include grid(half);
  }
  &:nth-child(n+8):nth-child(-n+9) {
    @include grid(third);
    @include grid-gutter(left, 2 of 12);
    @include grid-gutter(right, 6 of 12);
  }
  &:nth-child(10) {
    @include grid(6);
  }
  &:nth-child(n+11):nth-child(-n+12) {
    @include grid(quarter);
  }
}

/* --- BEGIN GRID.CSS --- */

//Set default grid container classes

.#{$prefix}-grid-container {
  @include grid(container);

  //Targeting mostly smartphone portrait devices
  @include for-size(phone-only) {

    .#{$prefix}-col-xs-full {
      @include grid(full);
    }

    .#{$prefix}-col-xs-half {
      @include grid(half );
    }

    .#{$prefix}-col-xs-third {
      @include grid(third);
    }

    .#{$prefix}-col-xs-quarter {
      @include grid(quarter);
    }

    .#{$prefix}-col-xs-fifth {
      @include grid(fifth);
    }
  }

  //Targeting mostly table portrait and smartphone landscape and up
  @include for-size(tablet-portrait-up) {

    .#{$prefix}-col-sm-full {
      @include grid(full);
    }

    .#{$prefix}-col-sm-half {
      @include grid(half );
    }

    .#{$prefix}-col-sm-third {
      @include grid(third);
    }

    .#{$prefix}-col-sm-quarter {
      @include grid(quarter);
    }

    .#{$prefix}-col-sm-fifth {
      @include grid(fifth);
    }
  }

  //Targeting mostly table landscape, some really small desktop monitors and up
  @include for-size(tablet-landscape-up) {

    .#{$prefix}-col-md-full {
      @include grid(full);
    }

    .#{$prefix}-col-md-half {
      @include grid(half );
    }

    .#{$prefix}-col-md-third {
      @include grid(third);
    }

    .#{$prefix}-col-md-quarter {
      @include grid(quarter);
    }

    .#{$prefix}-col-md-fifth {
      @include grid(fifth);
    }
  }

  //Targeting desktop monitors and up
  @include for-size(desktop-up) {

    .#{$prefix}-col-lg-full {
      @include grid(full);
    }

    .#{$prefix}-col-lg-half {
      @include grid(half );
    }

    .#{$prefix}-col-lg-third {
      @include grid(third);
    }

    .#{$prefix}-col-lg-quarter {
      @include grid(quarter);
    }

    .#{$prefix}-col-lg-fifth {
      @include grid(fifth);
    }
  }

  //Targeting big desktop monitors and up
  @include for-size(big-desktop-up) {

    .#{$prefix}-col-big-full {
      @include grid(full);
    }

    .#{$prefix}-col-big-half {
      @include grid(half );
    }

    .#{$prefix}-col-big-third {
      @include grid(third);
    }

    .#{$prefix}-col-big-quarter {
      @include grid(quarter);
    }

    .#{$prefix}-col-big-fifth {
      @include grid(fifth);
    }
  }

  //Grid classes that apply at all times
  .#{$prefix}-col-full {
    @include grid(full);
  }

  .#{$prefix}-col-half {
    @include grid(half );
  }

  .#{$prefix}-col-third {
    @include grid(third);
  }

  .#{$prefix}-col-quarter {
    @include grid(quarter);
  }

  .#{$prefix}-col-fifth {
    @include grid(fifth);
  }
}

/* --- END GRID.CSS --- */